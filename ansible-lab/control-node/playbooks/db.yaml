---
- name: Configurando servidor db
  hosts: db01

  user: vagrant
  become: yes

  vars_files:
    - vars/db.yml

  pre_tasks:
    - name: Install Postgresql
      yum:
        name:
          - postgresql
          - postgresql-server
        state: latest

    - name: Install python
      yum:
        name:
          - python3
          - python3-pip
          - python3-setuptools
          - python-setuptools
          - python-psycopg2
        state: latest

    - name: Install dependencies
      pip:
        name:
          - ipaddress
        state: present
        executable: pip3

  tasks:
    - name: Verificando se Postgres já foi iniciado
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: Iniciando cluster Postgre
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: Inicia serviço Postgre
      service: "name=postgresql state=started enabled=yes"

    - name: Criando banco
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: Criando usuário
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: Permitindo acesso ao banco
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: Permitindo conexão md5
      postgresql_pg_hba:
        dest: ~/data/pg_hba.conf
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        address: all
        create: yes
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: Permitindo acesso de outros hosts
      lineinfile:
        dest: ~/data/postgresql.conf
        state: present
        line: "{{item}}"
      with_items:
        - listen_addresses = '*'
      become: yes
      become_user: postgres
      notify: restart postgres

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted
